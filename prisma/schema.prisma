// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(cuid())
  name                 String    @db.VarChar(191)
  email                String    @unique
  password             String
  password_reset_token String?
  token_send_at        DateTime?
  email_verified_at    DateTime?
  email_verify_token   String?
  created_at           DateTime  @default(now())

  Clash Clash[]
}

model Clash {
  id          String   @id @default(cuid())
  title       String
  description String?
  expire_at   DateTime
  created_at  DateTime @default(now())

  banner ClashBanner?

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  clash_item   ClashItem[]
  ClashComment ClashComment[]
}

model ClashBanner {
  id        String @id @default(cuid())
  image_url String
  cloud_id  String

  clash_id String @unique
  clash    Clash  @relation(fields: [clash_id], references: [id], onDelete: Cascade)
}

model ClashItem {
  id String @id @default(cuid())

  image_url String
  cloud_id  String
  likes     Int    @default(0)

  clash_id String
  clash    Clash  @relation(fields: [clash_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())

}

model ClashComment {
  id      String @id @default(cuid())
  comment String

  clash_id String
  clash    Clash  @relation(fields: [clash_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
}

// todo: fix the query for get clash by id